// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SWO5.Currency.EF;

namespace SWO5.Currency.EF.Migrations
{
    [DbContext(typeof(CurrencyContext))]
    partial class CurrencyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SWO5.Currency.Domain.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("currency_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("currency_id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("SWO5.Currency.Domain.CurrencyType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrencyType");
                });

            modelBuilder.Entity("SWO5.Currency.Domain.ExchangeRate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<long?>("currency_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("instant_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("currency_id");

                    b.HasIndex("instant_id");

                    b.ToTable("ExchangeRate");
                });

            modelBuilder.Entity("SWO5.Currency.Domain.Instant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Instant");
                });

            modelBuilder.Entity("SWO5.Currency.Domain.Country", b =>
                {
                    b.HasOne("SWO5.Currency.Domain.CurrencyType", "CurrencyType")
                        .WithMany()
                        .HasForeignKey("currency_id");

                    b.Navigation("CurrencyType");
                });

            modelBuilder.Entity("SWO5.Currency.Domain.ExchangeRate", b =>
                {
                    b.HasOne("SWO5.Currency.Domain.CurrencyType", "CurrencyType")
                        .WithMany("ExchangeRates")
                        .HasForeignKey("currency_id");

                    b.HasOne("SWO5.Currency.Domain.Instant", "Instant")
                        .WithMany("ExchangeRates")
                        .HasForeignKey("instant_id");

                    b.Navigation("CurrencyType");

                    b.Navigation("Instant");
                });

            modelBuilder.Entity("SWO5.Currency.Domain.CurrencyType", b =>
                {
                    b.Navigation("ExchangeRates");
                });

            modelBuilder.Entity("SWO5.Currency.Domain.Instant", b =>
                {
                    b.Navigation("ExchangeRates");
                });
#pragma warning restore 612, 618
        }
    }
}
